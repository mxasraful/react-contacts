{"version":3,"sources":["logo.svg","components/Header/Header.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Box","AppBar","Container","Toolbar","size","edge","color","sx","mr","Typography","variant","component","flexGrow","Tooltip","title","IconButton","onClick","event","currentTarget","ml","Avatar","width","height","onClose","PaperProps","elevation","overflow","filter","mt","content","display","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Divider","ListItemIcon","Settings","fontSize","Logout","Home","openSnackbar","setOpenSnackbar","snackbarMsg","setSnackbarMsg","name","email","number","action","rows","ButtonGroup","Button","handleSnackbarClose","reason","snackbarAction","Snackbar","autoHideDuration","message","CssBaseline","fixed","marginTop","padding","float","marginBottom","TableContainer","Paper","Table","minWidth","TableHead","background","TableRow","TableCell","align","TableBody","map","row","border","scope","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e46ea302.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\r\nimport { Box } from '@mui/system';\r\nimport { Avatar, Container, Divider, ListItemIcon, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport { Logout, Settings } from '@mui/icons-material';\r\n\r\nconst Header = () => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar>\r\n                <Container>\r\n                    <Toolbar>\r\n                        <ContactPageIcon\r\n                            size=\"large\"\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            sx={{ mr: 2 }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </ContactPageIcon>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            React Contacts App\r\n                        </Typography>\r\n                        <Tooltip title=\"Account settings\">\r\n                            <IconButton onClick={handleClick} size=\"small\" sx={{ ml: 2 }}>\r\n                                <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                    </Toolbar>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        onClick={handleClose}\r\n                        PaperProps={{\r\n                            elevation: 0,\r\n                            sx: {\r\n                                overflow: 'visible',\r\n                                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                                mt: 1.5,\r\n                                '& .MuiAvatar-root': {\r\n                                    width: 32,\r\n                                    height: 32,\r\n                                    ml: -0.5,\r\n                                    mr: 1,\r\n                                },\r\n                                '&:before': {\r\n                                    content: '\"\"',\r\n                                    display: 'block',\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    right: 14,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                    bgcolor: 'background.paper',\r\n                                    transform: 'translateY(-50%) rotate(45deg)',\r\n                                    zIndex: 0,\r\n                                },\r\n                            },\r\n                        }}\r\n                        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                    >\r\n                        <MenuItem>\r\n                            <Avatar /> My account\r\n                        </MenuItem>\r\n                        <Divider />\r\n                        <MenuItem>\r\n                            <ListItemIcon>\r\n                                <Settings fontSize=\"small\" />\r\n                            </ListItemIcon>\r\n                            Settings\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <ListItemIcon>\r\n                                <Logout fontSize=\"small\" />\r\n                            </ListItemIcon>\r\n                            Logout\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </Container>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Header;","import { Button, ButtonGroup, Container, CssBaseline, Snackbar } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { Fragment, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Home = () => {\r\n\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [snackbarMsg, setSnackbarMsg] = useState(null)\r\n\r\n    function createData(name, email, number, action) {\r\n        return { name, email, number, action };\r\n    }\r\n\r\n    const rowData = [\r\n        {\r\n            name: \"Asraful I.\",\r\n            email: \"mxasraful@outlook.com\",\r\n            number: \"01631820368\",\r\n            id: \"984E43FD35\"\r\n        },\r\n        {\r\n            name: \"Asraful ISLAM\",\r\n            email: \"mxasraful@outlook.com\",\r\n            number: \"01631820368\",\r\n            id: \"C464F665D35\"\r\n        },\r\n        {\r\n            name: \"Mx Asraful\",\r\n            email: \"mxasraful@outlook.com\",\r\n            number: \"01631820368\",\r\n            id: \"984E45C3454\"\r\n        },\r\n    ]\r\n\r\n    const rows = [\r\n        createData('Asraful', 'mxasraful@outlook.com', \"01631820368\", (\r\n            <ButtonGroup variant=\"outlined\" size='small'>\r\n                <Button color=\"success\"><CreateIcon /></Button>\r\n                <Button color=\"error\"><DeleteIcon /></Button>\r\n            </ButtonGroup>\r\n        )),\r\n    ];\r\n\r\n\r\n    // Snackbar Section\r\n    const handleSnackbarClick = () => {\r\n        setOpenSnackbar(true);\r\n    };\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    const snackbarAction = (\r\n        <Fragment>\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleSnackbarClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={handleSnackbarClose}\r\n                message={snackbarMsg}\r\n                action={snackbarAction}\r\n            >\r\n            </Snackbar>\r\n            <CssBaseline />\r\n            <Container fixed>\r\n                <Box sx={{ bgcolor: '#cfe8fc', height: '80vh', marginTop: \"15vh\", padding: \"20px 200px\" }}>\r\n                    <Box>\r\n                        <Button sx={{ float: \"right\", marginBottom: \"20px\" }} onClick={() => {\r\n                            handleSnackbarClick()\r\n                            setSnackbarMsg(\"Not Allowed.\")\r\n                        }} variant=\"contained\"><AddIcon /> Add Contacts</Button>\r\n                    </Box>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead sx={{ background: \"#1976d26b\" }}>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell align=\"center\">Email</TableCell>\r\n                                    <TableCell align=\"center\">Phone</TableCell>\r\n                                    <TableCell align=\"center\">Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow\r\n                                        key={row.name}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.email}</TableCell>\r\n                                        <TableCell align=\"right\">{row.number}</TableCell>\r\n                                        <TableCell align=\"right\">{row.action}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\">\n              <Header />\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}